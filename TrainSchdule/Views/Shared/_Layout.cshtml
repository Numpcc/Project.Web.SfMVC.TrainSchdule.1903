@using System.IO;
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    #region Getting application theme from file or from session

    if (User.Identity.IsAuthenticated)
    {
        string sessionJson = HttpContextAccessor.HttpContext.Session.GetString("APP_THEME");
        if (String.IsNullOrEmpty(sessionJson))
        {

            string root = Directory.GetCurrentDirectory();
            var dir = $"{root}\\wwwroot\\data\\settings\\{User.Identity.Name}";
            var file = $"{dir}\\config.json";

            if (Directory.Exists(dir) && File.Exists(file))
            {
                using (var r = new StreamReader(file))
                {
                    var json = r.ReadToEnd();
                    var setting = JsonConvert.DeserializeObject<UserSettingsViewModel>(json);
                    HttpContextAccessor.HttpContext.Session.SetString("APP_THEME", json);

                    if (setting != null && setting.ThemeColor != null)
                    {
                        ViewBag.ThemeClass = setting.ThemeColor.CssClass;
                    }

                    if (setting != null && setting.AccentColor != null)
                    {
                        ViewBag.AccentClass = setting.AccentColor.CssClass;
                        ViewBag.AccentColor = setting.AccentColor.Color;
                    }
                }
            }
        }
        else if(sessionJson != null)
        {
            var setting = JsonConvert.DeserializeObject<UserSettingsViewModel>(sessionJson);

            if (setting != null && setting.ThemeColor != null)
            {
                ViewBag.ThemeClass = setting.ThemeColor.CssClass;
            }

            if (setting != null && setting.AccentColor != null)
            {
                ViewBag.AccentClass = setting.AccentColor.CssClass;
                ViewBag.AccentColor = setting.AccentColor.Color;
            }
        }
    }

    #endregion
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="keywords" content="@User.Identity.Name 搜索相关,@ViewBag.Keywords">
    <meta name="description" content="@ViewBag.Description - TrainSchdule 提供的一个测试平台.">

    <title>@ViewBag.Title &#8729; TrainSchdule</title>

    <meta name="theme-color" content="@(ViewBag.AccentColor != null ? ViewBag.AccentColor : "#1496ED")">

    <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16">
    <link rel="icon" type="image/png" href="/favicon-24x24.png" sizes="24x24">
    <link rel="icon" type="image/png" href="/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="/favicon-64x64.png" sizes="64x64">
    <link rel="icon" type="image/png" href="/favicon-128x128.png" sizes="128x128">
    <link rel="icon" type="image/png" href="/favicon-256x256.png" sizes="256x256">
    <link rel="icon" type="image/png" href="/favicon-512x512.png" sizes="512x512">

    <link href="~/css/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link href="~/css/googleapis-fonts/fonts.css" rel="stylesheet">

    <link href="~/css/filters.css" rel="stylesheet" />
    <link href="~/css/app.css" rel="stylesheet" />

    @await RenderSectionAsync("Styles", required: false)
    <environment include="Development">
	    <script defer src="~/js/vue/vue.js"></script>
	    <script defer src="~/js/vue/vue-resource.js"></script>
    </environment>
    
    <script defer src="~/js/app.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

    @*<script defer src="~/js/registerServiceWorker.js"></script>*@

</head>
<body id="body" class="@( ViewBag.ThemeClass != null ? ViewBag.ThemeClass : "is-white-background" ) @( ViewBag.AccentClass != null ? ViewBag.AccentClass : "is-info-accent" )" data-app-user="@( User.Identity.IsAuthenticated ? User.Identity.Name : "" )" data-app-permission="@User.IsInRole("Admin")">

    <!--  Preloader  -->
    <div id="preloader" data-hidden="true">
        <div class="bar"></div>
        <div class="bar"></div>
        <div class="bar"></div>
    </div>

    <!--  Panel for messages  -->
    <div id="message" data-hidden="true" data-message-type="error">
        <p class="message-text"></p>
    </div>

    <!--  Desktop navbar  -->
    <nav class="desktop-navbar" v-if="width > 736" v-bind:class="{'is-hidden-navbar': isHidden, 'has-nav-shadow': !isOnTop}" id="navbar">
        @if (User.Identity.IsAuthenticated)
        {
            <div>
                <a class="navbar-item" href="/photos" title="Photos">
                    <b>TrainSchdule</b>
                </a>
                <a class="navbar-item" title="查找" href="/search"><i class="fa fa-search"></i></a>
            </div>

            <div>
                <a class="navbar-item" title="主页" href="/"><i class="fa fa-home"></i></a>
                <a class="navbar-item" title="创建" href="/photos/create"><i class="fa fa-plus"></i></a>
                @if (User.IsInRole("Admin"))
                {
                    <a class="navbar-item" href="/admin" title="管理面板" rel="nofollow"><i class="fa fa-tasks"></i></a>
                }
                <a class="navbar-item" title="@User.Identity.Name" href="/users/@User.Identity.Name">@User.Identity.Name</a>
            </div>
        }
        else
        {
            <a class="navbar-item" href="/photos" title="Photos">
                <b>TrainSchdule</b>
            </a>
            <div>
                <a id="registerLink" class="navbar-item is-active" href="/account/register" title="Sign up">注册</a>
                <a id="loginLink" class="navbar-item" href="/account/login" title="Log in">登录</a>
            </div>
        }
    </nav>

    <!--  Mobile navbar  -->
    <nav class="mobile-navbar" id="mobileNavbar" v-bind:class="{'is-hidden-mobile-navbar': isHidden}" v-if="width <= 736">
        @if (User.Identity.IsAuthenticated)
        {
            <a class="button is-white is-mobile-nav-item is-medium" href="/photos" title="探索"><i class="fa fa-home"></i></a>
            <a class="button is-white is-mobile-nav-item is-medium" href="/" title="主页"><i class="fa fa-hand-peace"></i></a>
            <a class="button is-white is-mobile-nav-item is-medium" href="/photos/create" title="创建"><i class="fa fa-plus"></i></a>
            <a class="button is-white is-mobile-nav-item is-medium" href="/search" title="查找"><i class="fa fa-search"></i></a>
            if (User.IsInRole("Admin"))
            {
                <a class="button is-white is-mobile-nav-item is-medium" href="/admin" title="管理面板" rel="nofollow"><i class="fa fa-tasks"></i></a>
            }
            <a class="button is-white is-mobile-nav-item is-medium" href="/users/@User.Identity.Name" title="@User.Identity.Name"><i class="fa fa-user"></i></a>
        }
        else
        {
            <a id="registerLink" class="button is-white is-mobile-nav-item is-medium" href="/account/register" title="注册"><i class="fa fa-address-book"></i></a>
            <a class="button is-white is-medium" href="/photos" title="探索"><i class="fa fa-home"></i></a>
            <a id="loginLink" class="button is-white is-mobile-nav-item is-medium" href="/account/login" title="登录"><i class="fa fa-sign-in-alt"></i></a>
        }
    </nav>

    <!--  Main content  -->
    <main class="section" id="primary-container">
        <div class="container">
            <h1 class="title is-spaced is-uppercase has-text-centered has-text-weight-bold is-doted-end" title="@ViewBag.Title">@ViewBag.Title</h1>
            @RenderBody()
        </div>
    </main>

    <!--  Footer  -->
    <footer class="footer" id="footer">
        <div class="container">
            <div class="content has-text-centered">
                Copyright © @DateTime.Now.Year TrainSchdule. All rights reserved.
            </div>
        </div>
    </footer>
</body>
</html>
@model PhotoHub.WEB.ViewModels.UserDetailsViewModel

@{
    ViewBag.Title = Model.UserName;
    ViewBag.Keywords = Model.UserName + ",Log In to Follow,Manage Account,Giveaways,edit,Go to photo";
    ViewBag.Description = Model.About;
}

@section Scripts {
    <script defer src="~/js/users/details.js"></script>
}

 <div class="container" id="user" data-user="@Model.UserName" v-if="user">
    <article>
        <div id="main-user-panel" class="@(Model.Confirmed?"user-confirmed":"")">
            <div id="user-about-panel">
                <div style="display: flex; justify-content: center; flex-direction: column; align-content: center; align-items: center;">
                    <img src="@Model.Avatar" alt="@Model.UserName" class="is-circle has-tiny-shadow image is-172x172" />
                    @if (!String.IsNullOrEmpty(Model.WebSite)) { 
                        <a href="@Model.WebSite" class="user-website-href" title="Personal web site" target="_blank">website<i class="fas fa-external-link-square-alt"></i></a>
                    }
                </div>
                <div>
                    <div class="has-text-centered">
                        <p class="user-name-text">@Model.RealName</p>
                        <p class="user-about-text">@Model.About</p>
                    </div>
                    <div id="user-follow-panel">
                        <div style="margin-bottom: 15px;">
                            <button class="button is-white" v-if="user.followers == null || user.followers.length <= 0" title="Followers">@Model.Followers.Count followers</button>
                            <button class="button is-white" v-if="user.followers != null && user.followers.length > 0" v-on:click="showFollowers" title="Followers" v-cloak>@Model.Followers.Count followers</button>
                            <button class="button is-white" v-if="user.followings == null || user.followings.length <= 0" title="Followings">@Model.Followings.Count followings</button>
                            <button class="button is-white" v-if="user.followings != null && user.followings.length > 0" v-on:click="showFollowings" title="Followings" v-cloak>@Model.Followings.Count followings</button>
                        </div>
                        <div style="margin-bottom: 15px;">
                            @if (User.Identity.IsAuthenticated)
                            {
                                if (User.Identity.Name != Model.UserName)
                                {
                                    <button class="button" v-bind:title="user.followed?'Unfollow':'Follow'" v-bind:class="{'is-accent-button': !user.followed}" v-on:click="user.followed?disfollow():follow()" v-cloak>{{user.followed?'Unfollow':'Follow'}}</button>
                                    <button class="button is-dark" v-bind:title="user.blocked?'Unblock':'Block'" v-on:click="user.blocked?disblock():block()" v-cloak>{{user.blocked?'Unblock':'Block'}}</button>
                                }
                                else
                                {
                                    if (User.IsInRole("Admin"))
                                    {
                                        <a class="button is-light" href="/admin" title="Admin panel" rel="nofollow"><i class="fas fa-tasks"></i></a>
                                    }
                                    <a href="/manage/index" class="button is-accent-button" title="Manage Account">Manage Account</a>
                                    <a href="/manage/bookmarks" class="button is-light" title="Show bookmarks"><i class="fas fa-bookmark"></i></a>
                                }
                            }
                            else
                            {
                                <a class="button is-accent-button" href="/account/login" title="Log In to Follow">Log in</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
            @if(User.Identity.IsAuthenticated && Model.UserName != User.Identity.Name)
            {
            <div id="user-mutual-panel" v-if="!user.followed && user.mutuals != null && user.mutuals.length > 0" v-cloak>
                <a class="button is-small is-light mutual-friend-button" v-bind:href="`/users/${mutual.userName}`" v-for="mutual in mutuals" v-bind:title="mutual.realName || mutual.userName">{{mutual.userName}}</a>
                <a class="button is-small is-white" v-if="mutualsActive && user.mutuals.length > 3" v-on:click="closeMutuals" title="Hide all mutuals">Hide</a>
                <a class="button is-small is-white" v-if="!mutualsActive && user.mutuals.length > 3" v-on:click="showMutuals" title="Show all mutuals">All mutuals({{user.mutuals.length}})</a>
            </div>
            }
        </div>
    </article>

    <!-- Modal Followers -->
    <div class="modal" v-bind:class="{'is-active': modals.followers}">
        <div class="modal-background modal-custom-background" v-on:click="closeFollowers"></div>
        <div class="modal-card modal-card-custom">
            <header class="modal-card-head">
                <p class="modal-card-title is-uppercase">followers</p>
                <a class="close-button" v-on:click="closeFollowers" title="Close modal"><i class="fas fa-times"></i></a>
            </header>
            <section class="modal-card-body">
                <a class="button is-white is-mobile-nav-item follower-modal-button" v-bind:href="`/users/${user.userName}`" v-bind:title="user.userName" v-for="user in filteredFollowers">
                    <img class="image is-64x64 is-circle" v-bind:src="user.avatar" v-bind:alt="user.userName">
                    <p class="is-size-5 is-doted-end">{{user.userName}}</p>
                </a>
            </section>
            <div class="followers-modal-input">
                <input class="input" type="text" placeholder="User name" id="findFollowerInput" v-model="findFollower" />
            </div>
            <a class="button is-white close-modal-mobile-button" title="Close modal" v-on:click="closeFollowers">Close</a>
        </div>
    </div>

    <!-- Modal Followings -->
    <div class="modal" v-bind:class="{'is-active': modals.followings}">
        <div class="modal-background modal-custom-background" v-on:click="closeFollowings"></div>
        <div class="modal-card modal-card-custom">
            <header class="modal-card-head">
                <p class="modal-card-title is-uppercase">followings</p>
                <a class="close-button" v-on:click="closeFollowings" title="Close modal"><i class="fas fa-times"></i></a>
            </header>
            <section class="modal-card-body">
                <a class="button is-white is-mobile-nav-item follower-modal-button" v-bind:href="`/users/${user.userName}`" v-bind:title="user.userName" v-for="user in filteredFollowings">
                    <img class="image is-64x64 is-circle" v-bind:src="user.avatar" v-bind:alt="user.userName">
                    <p class="is-size-5 is-doted-end">{{user.userName}}</p>
                </a>
            </section>
            <div class="followers-modal-input">
                <input class="input" type="text" placeholder="User name" id="findFollowingInput" v-model="findFollowing" />
            </div>
            <a class="button is-white close-modal-mobile-button" title="Close modal" v-on:click="closeFollowings">Close</a>
        </div>
    </div>

    @if (User.Identity.IsAuthenticated && Model.IBlocked)
    {
        <div class="empty-container">
            <p>You are blocked</p>
        </div>
    }
    else
    {
        <div id="posts" class="is-flex" v-if="posts.length > 0">
            <article class="card is-responsive" v-for="post in posts" :key="post.$id" v-cloak>
                <header class="card-header">
                    <p class="card-header-title">
                        <a class="has-text-grey-darker has-text-left has-text-justified" v-bind:href="`/users/${post.owner.userName}`" v-bind:title="post.owner.userName" style="margin-right: 3px;"><img class="image is-32x32 is-circle" v-bind:src="post.owner.avatar" v-bind:alt="post.owner.userName" /></a>
                        <a class="has-text-grey-darker has-text-left has-text-justified" v-bind:href="`/users/${post.owner.userName}`" v-bind:title="post.owner.userName">{{post.owner.userName}}</a>
                    </p>

                    <div class="card-header-icon">
                        @if (Model.UserName == User.Identity.Name)
                        {
                            <a class="button is-white has-text-grey-darker" v-bind:href="`/photos/edit/${post.$id}`" title="Edit photo"><i class="far fa-edit"></i></a>
                        }
                        @if (User.Identity.IsAuthenticated)
                        {
                            <a class="button is-white" title="Report photo" v-on:click="reportPhoto(post.$id)"><i class="fas fa-exclamation-circle" v-bind:data-report-id="post.$id"></i></a>
                        }
                        <a class="button is-white" title="Share" v-on:click="sharePhoto(post)" v-if="canShare"><i class="fas fa-share-alt"></i></a>
                        <a class="button is-white" title="Copy link to clipboard" v-on:click="copyToClipboard(post.$id)"><i class="far fa-clipboard" v-bind:data-copy-id="post.$id"></i></a>
                    </div>
                </header>

                <div class="card-image is-unselectable" v-on:dblclick="like(post)">
                    <figure class="is-card-image filter" v-bind:class="post.filter">
                        <img v-bind:src="`/data/photos/${post.owner.userName}/${post.path}`" v-bind:alt="`${post.owner.userName} photo with filter`">
                    </figure>
                </div>

                <div class="card-tags-panel">
                    <a class="button is-small is-light" v-bind:href="`/tag/${tag.name}`" v-for="tag in post.tags">{{tag.name}}</a>
                </div>

                <div class="card-content">
                    <div class="media">
                        <div class="media-left is-doted-end">
                            {{post.description}}
                        </div>

                        <div class="media-content">

                        </div>

                        <div class="media-right">
                            <a class="photo-card-date" v-bind:href="`/photos/${post.$id}`" title="Go to photo"><time v-bind:datetime="post.date">{{post.date}}</time></a>
                        </div>
                    </div>


                    <div class="content card-button-panel">
                        <div>
                            <button class="button is-danger is-unselectable" v-bind:class="post.liked?'':'is-outlined'" v-on:click="post.liked?dislike(post):like(post)" v-bind:title="post.liked?'Dislike':'Like'" v-if="currentAppUserName"><i class="fa-heart" v-bind:class="post.liked?'fas':'far'"></i></button>
                            <button v-if="post.likes.length > 0" class="button is-danger is-unselectable" v-bind:class="post.liked?'':'is-outlined'" v-on:click="showLikes(post)" title="Likes list">{{ post.likes.length }}</button>
                            <button class="button is-light comment-button" v-on:click="showComments(post)" title="Comments"><i class="fas fa-comment"></i></button>
                            <button class="button is-light" v-on:click="showComments(post)" title="Comments" v-if="post.comments.length > 0">{{ post.comments.length }}</button>
                        </div>
                        <div>
                            <button class="button is-white" title="Show metadata" v-on:click="showMetadata(post)"><i class="fab fa-medapps"></i></button>
                            <button class="button bookmark-button" v-bind:class="post.bookmarked?'is-light':'is-white'" title="Save to bookmarks" v-if="currentAppUserName" v-on:click="post.bookmarked?disbookmark(post):bookmark(post)"><i class="fa-bookmark" v-bind:class="post.bookmarked?'fas':'far'"></i></button>
                        </div>
                    </div>

                    <footer class="card-footer" v-bind:class="{'is-hidden': !post.commentActive}">
                        <div class="content" style="width: 100%;">
                            <div class="content" id="content-photo-details" v-if="post && post.comments.length">
                                <div class="media" v-for="comment in post.comments" :key="comment.$id">
                                    <div class="media-left is-flex is-flex-column">
                                        <a v-bind:href="`/users/${comment.owner.userName}`" class="has-text-black" v-bind:title="comment.owner.userName"><b>{{ comment.owner.userName }}</b></a>
                                        <small class="has-text-grey">{{ comment.date }}</small>
                                    </div>

                                    <div class="media-content is-doted-end" v-bind:title="comment.text">
                                        {{comment.text}}
                                    </div>

                                    <div class="media-right" v-if="comment.$id && (currentAppUserName == comment.owner.userName || post.owner.userName == currentAppUserName || appPermission == 'True')">
                                        <a class="close-button" v-on:click="deleteComment(comment, post)" title="Delete comment"><i class="fas fa-trash"></i></a>
                                    </div>
                                </div>
                            </div>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="control">
                                    <input class="input" v-bind:id="`comment${post.$id}`" type="text" placeholder="Comment photo" v-on:keyup.enter="comment(post)">
                                    <div class="is-flex is-flex-centered" style="margin: 10px 0 5px 0">
                                        <button class="button is-accent-button" v-bind:class="{'is-loading': commenting}" v-on:click="comment(post)" title="Comment photo">Comment</button>
                                    </div>
                                </div>
                            }
                        </div>
                    </footer>
                </div>
            </article>

            <!-- Modal Likes -->
            <div class="modal" v-bind:class="{'is-active': modals.likeActive}" v-if="current">
                <div class="modal-background modal-custom-background" v-on:click="closeLikes"></div>
                <div class="modal-card modal-card-custom">
                    <header class="modal-card-head">
                        <p class="modal-card-title is-uppercase">likes</p>
                        <a class="close-button" v-on:click="closeLikes" title="Close modal"><i class="fas fa-times"></i></a>
                    </header>
                    <section class="modal-card-body" v-if="current.likes != null && current.likes.length > 0">
                        <div class="media" v-for="like in current.likes" :key="like.$id">
                            <div class="media-left">
                                <a v-bind:href="`/users/${like.owner.userName}`" class="has-text-black is-doted-end" v-bind:title="like.owner.userName"><b>{{ like.owner.userName }}</b></a>
                            </div>

                            <div class="media-content">

                            </div>

                            <div class="media-right">
                                <small class="has-text-grey">{{ like.date }}</small>
                            </div>
                        </div>
                    </section>
                    <section class="modal-card-body" style="overflow-x: hidden; overflow-y: auto;" v-if="current.likes == null || current.likes.length <= 0">
                        <div class="empty-container-modal">
                            <p>Like it first</p>
                        </div>
                    </section>
                    <a class="button is-white close-modal-mobile-button" title="Close modal" v-on:click="closeLikes">Close</a>
                </div>
            </div>

            <!-- Modal Metadata -->
            <div class="modal" v-bind:class="{'is-active': modals.metadataActive}" v-if="posts.length > 0 && current">
                <div class="modal-background modal-custom-background" v-on:click="closeMetadata"></div>
                <div class="modal-card modal-card-custom modal-card-custom-metadata">
                    <header class="modal-card-head">
                        <p class="modal-card-title is-uppercase">info</p>
                        <a class="close-button" v-on:click="closeMetadata" title="Close modal"><i class="fas fa-times"></i></a>
                    </header>
                    <section class="modal-card-body modal-card-body-metadata">
                        <div>
                            <p>Brand</p>
                            <p>{{current.manufacturer}}</p>
                        </div>
                        <div>
                            <p>Model</p>
                            <p>{{current.model}}</p>
                        </div>
                        <div>
                            <p>ISO</p>
                            <p>{{current.iso}}</p>
                        </div>
                        <div>
                            <p>Exposure</p>
                            <p>{{current.exposure}}</p>
                        </div>
                        <div>
                            <p>Aperture</p>
                            <p>{{current.aperture}}</p>
                        </div>
                        <div>
                            <p>Focal length</p>
                            <p>{{current.focalLength}}</p>
                        </div>
                        <div>
                            <p>Filter</p>
                            <p>{{current.filter}}</p>
                        </div>
                        <a class="button is-white has-text-grey-darker" title="Close modal" v-on:click="closeMetadata">Close</a>
                    </section>
                </div>
            </div>

            <button class="button is-uppercase is-responsive" v-bind:class="{'is-loading': postsFetch.incallback}" v-on:click="fetchPhotos" v-if="!postsFetch.loaded && posts.length > 0 && posts.length%4 == 0" v-cloak>Load More</button>
        </div>
        <div class="empty-container" v-if="postsFetch.loaded && posts.length < 1" v-cloak>
            <p>User has no photos</p>
        </div>
    }
</div>
